{"version":3,"sources":["LandingPage/TopNavBar.jsx","resources/surfaceMaps/2k_sun.jpeg","Globes/SunGlobe.jsx","WeatherCard/WeatherCard.jsx","Globes/EarthGlobe.jsx","resources/surfaceMaps/lunar_surface.jpg","resources/surfaceMaps/lunar_bumpmap.jpg","Globes/MoonGlobe.jsx","resources/surfaceMaps/2k_mars.jpeg","Globes/MarsGlobe.jsx","resources/earth_blue_planet_globe.jpg","resources/moon-test.png","resources/sun_immage.jpeg","resources/mars_red_planet_planet.jpg","LandingPage/LandingPage.jsx","App.js","reportWebVitals.js","index.js"],"names":["TopNavBar","Box","sx","flexGrow","AppBar","className","position","Toolbar","IconButton","size","edge","color","mr","Typography","variant","component","Button","gData","lat","lng","SunGlobe","globeImageUrl","sunImage","pointsData","pointAltitude","pointColor","height","width","WeatherCard","data","useState","cardData","setCardData","useEffect","Card","minWidth","CardContent","fontSize","gutterBottom","coord","toPrecision","lon","mb","API_KEY","GRID_SIZE","redMaterial","THREE","opacity","transparent","noMaterial","tileWidth","tileHeight","tilesData","EarthGlobe","tiles","setTiles","previousTile","setPreviousTile","weatherDisplayData","setWeatherDisplayData","setWeatherDataLoading","onClickRegion","selectedTile","locationData","fetch","then","res","json","result","error","console","log","bumpImageUrl","tileMaterial","onTileHover","t","map","material","onTileClick","Array","keys","forEach","lngIdx","latIdx","push","Math","random","round","MoonGlobe","moonImage","moonBumpMap","MarsGlobe","marsImage","LandingPage","activeCard","setActiveCard","openCard","cardChoice","gridNumber","planetCardNumber","Grid","container","spacing","item","xs","md","style","display","PlanetCard","planetName","image","active","Collapse","in","orientation","timeout","unmountOnExit","earthImage","props","getWindowDimensions","windowDimensions","setWindowDimensions","handleResize","window","addEventListener","removeEventListener","useWindowDimensions","Paper","elevation","maxWidth","CardActionArea","onClick","CardMedia","alt","innerWidth","innerHeight","theme","createTheme","palette","primary","light","main","dark","secondary","App","ThemeProvider","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.89ef80e7.chunk.js","sourcesContent":["import * as React from 'react';\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport IconButton from '@mui/material/IconButton';\nimport MenuIcon from '@mui/icons-material/Menu';\n\nexport default function TopNavBar() {\n  return (\n    <Box sx={{ flexGrow: 1 }}>\n      <AppBar className=\"AppBar\" position=\"static\">\n        <Toolbar>\n          <IconButton\n            size=\"large\"\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"menu\"\n            sx={{ mr: 2 }}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" component=\"div\" sx={{ flexGrow: 1 }}>\n            wAether\n          </Typography>\n          <Button color=\"inherit\">Login</Button>\n        </Toolbar>\n      </AppBar>\n    </Box>\n  );\n}","export default __webpack_public_path__ + \"static/media/2k_sun.4b569137.jpeg\";","import * as React from 'react';\nimport Globe from 'react-globe.gl';\n\nimport sunImage from '../resources/surfaceMaps/2k_sun.jpeg'\n\nimport './Globes.css' \n\nconst gData = [{lat:90,lng:135,size:1,color:'white'}]\n\nexport default function SunGlobe() {\n  return (\n    <div className=\"Globe-container\">\n      <Globe\n      globeImageUrl={sunImage}\n      pointsData={gData}\n      pointAltitude=\"size\"\n      pointColor=\"color\"\n      height=\"800\"\n      width=\"1095\"\n    />\n    <div className=\"Globe-weather-popup\">\n      test\n    </div>\n    </div>\n  );\n}","import * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport Typography from '@mui/material/Typography';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\n\nexport default function WeatherCard({data}) {\n  const [cardData, setCardData] = useState(data);\n  useEffect(() => {\n    setCardData(data);\n  }, [data]);\n  return (\n    <Card sx={{ minWidth: 275 }} className=\"\">\n      <CardContent>\n      <Typography sx={{ fontSize: 14 }} color=\"#FFFFFF\" gutterBottom>\n        {cardData?.coord?.lat?.toPrecision(4)},{cardData?.coord?.lon?.toPrecision(4)}\n      </Typography>\n      <Typography variant=\"h5\" component=\"div\" color=\"#FFFFFF\">\n        \n      </Typography>\n      <Typography sx={{ mb: 1.5 }} color=\"#FFFFFF\">\n        \n      </Typography>\n      <Typography variant=\"body2\" color=\"#FFFFFF\">\n\n      </Typography>\n    </CardContent>\n\n    </Card>\n  );\n}","import * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport Globe from 'react-globe.gl';\nimport * as THREE from 'three'\n\nimport WeatherCard from '../WeatherCard/WeatherCard'\n\nimport './Globes.css' \n\nconst TILE_MARGIN = 0.00; // degrees\nconst API_KEY = 'beb7150490945ad8e8581ddc73e6a064';\n\n// Gen random data\nconst GRID_SIZE = [200, 100];\n\nconst redMaterial = new THREE.MeshLambertMaterial({ color:'red', opacity: 0.5, transparent: true });\nconst noMaterial = new THREE.MeshLambertMaterial({ color:'red', opacity: 0.0, transparent: true });\n\nconst tileWidth = 360 / GRID_SIZE[0];\nconst tileHeight = 180 / GRID_SIZE[1];\nconst tilesData = [];\n[...Array(GRID_SIZE[0]).keys()].forEach(lngIdx =>\n  [...Array(GRID_SIZE[1]).keys()].forEach(latIdx =>\n    tilesData.push({\n      lng: -180 + lngIdx * tileWidth,\n      lat: -90 + (latIdx + 0.5) * tileHeight,\n      material: '#555555'\n    })\n  )\n);\n\nexport default function EarthGlobe() {\n  const [tiles, setTiles] = useState(tilesData);\n  const [previousTile, setPreviousTile] = useState();\n  const [weatherDisplayData, setWeatherDisplayData] = useState({\n    coord: {\n      lon: -122.08,\n      lat: 37.39\n    },\n  });\n  const [weatherDataLoading, setWeatherDataLoading] = useState(false);\n\n  function onHoverRegion(selectedTile) {\n    if (selectedTile) {\n      if((previousTile?.lat !== selectedTile?.lat || previousTile?.lng !== selectedTile?.lng)){\n        setTiles(tiles.map(t => {\n          if(t?.lat === selectedTile.lat && t?.lng === selectedTile.lng ) {\n            return {...t,material: redMaterial};\n          }\n          if(t?.lat === previousTile?.lat && t?.lng === previousTile?.lng ) {\n            return {...t,material: noMaterial};\n          }\n          return t;\n        }));\n        setPreviousTile(selectedTile);\n        setWeatherDisplayData({...weatherDisplayData,coord:{lat:selectedTile.lat,lon:selectedTile.lng}});\n      }\n    }\n  }\n\n  function onClickRegion(selectedTile) {\n    if (selectedTile) {\n      setWeatherDataLoading(true);\n      fetchRegionData({lat:selectedTile.lat,lng:selectedTile.lng});\n      console.log(weatherDisplayData);\n    }\n  }\n\n  function fetchRegionData(locationData) {\n    fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${locationData.lat}&lon=${locationData.lng}&appid=${API_KEY}`)\n      .then(res => res.json())\n      .then(\n        (result) => {\n          setWeatherDisplayData(result);\n          setWeatherDataLoading(false);\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n        }\n      );\n    return ({\n      lat:locationData.lat,\n      lng:locationData.lng,\n\n    });\n  }\n\n  let gData = [{lat:90,lng:135,size:1,color:'white'}];\n  return (\n    <div className=\"Globe-container\">\n      <Globe\n      globeImageUrl=\"//unpkg.com/three-globe/example/img/earth-blue-marble.jpg\"\n      bumpImageUrl=\"//unpkg.com/three-globe/example/img/earth-topology.png\"\n      pointsData={gData}\n      pointAltitude=\"size\"\n      pointColor=\"color\"\n      height=\"800\"\n      width=\"1095\"\n      tileMaterial=\"material\"\n      tilesData={tiles}\n      tileWidth={tileWidth - TILE_MARGIN}\n      tileHeight={tileHeight - TILE_MARGIN}\n      onTileHover={(t) => onHoverRegion(t)}\n      onTileClick={(t) => onClickRegion(t)}\n    >\n    </Globe>\n    <div className=\"Globe-weather-popup\">\n      <WeatherCard data={weatherDisplayData}/>\n    </div>\n    </div>\n  );\n}","export default __webpack_public_path__ + \"static/media/lunar_surface.ae7aaee2.jpg\";","export default __webpack_public_path__ + \"static/media/lunar_bumpmap.1dd7bdd6.jpg\";","import * as React from 'react';\nimport Globe from 'react-globe.gl';\n\nimport moonImage from '../resources/surfaceMaps/lunar_surface.jpg'\nimport moonBumpMap from '../resources/surfaceMaps/lunar_bumpmap.jpg'\n\nimport './Globes.css' \n\nconst N = 0;\nlet gData = [...Array(N).keys()].map(() => ({\n  lat: (Math.random() - 0.5) * 180,\n  lng: (Math.random() - 0.5) * 360,\n  size: Math.random() / 3,\n  color: ['red', 'white', 'blue', 'green'][Math.round(Math.random() * 3)]\n}));\n\nexport default function MoonGlobe() {\n\n  gData.push({lat:90,lng:135,size:1,color:'white'})\n  return (\n    <div className=\"Globe-container\">\n      <Globe\n      globeImageUrl={moonImage}\n      bumpImageUrl={moonBumpMap}\n      pointsData={gData}\n      pointAltitude=\"size\"\n      pointColor=\"color\"\n      height=\"800\"\n      width=\"1095\"\n    />\n    </div>\n  );\n}","export default __webpack_public_path__ + \"static/media/2k_mars.33960f5a.jpeg\";","import * as React from 'react';\nimport Globe from 'react-globe.gl';\n\nimport marsImage from '../resources/surfaceMaps/2k_mars.jpeg'\n\nimport './Globes.css' \n\nconst gData = [{lat:90,lng:135,size:1,color:'white'}]\n\nexport default function MarsGlobe() {\n  return (\n    <div className=\"Globe-container\">\n      <Globe\n      globeImageUrl={marsImage}\n      pointsData={gData}\n      pointAltitude=\"size\"\n      pointColor=\"color\"\n      height=\"800\"\n      width=\"1095\"\n    />\n    </div>\n  );\n}","export default __webpack_public_path__ + \"static/media/earth_blue_planet_globe.e614f141.jpg\";","export default __webpack_public_path__ + \"static/media/moon-test.016dc771.png\";","export default __webpack_public_path__ + \"static/media/sun_immage.c75c5e4f.jpeg\";","export default __webpack_public_path__ + \"static/media/mars_red_planet_planet.6956646c.jpg\";","import { useState, useEffect } from 'react';\nimport * as React from 'react';\nimport Card from '@mui/material/Card';\nimport CardContent from '@mui/material/CardContent';\nimport CardMedia from '@mui/material/CardMedia';\nimport Typography from '@mui/material/Typography';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport { CardActionArea } from '@mui/material';\nimport { Collapse } from '@mui/material';\n\nimport TopNavBar from \"./TopNavBar\";\nimport SunGlobe from \"../Globes/SunGlobe\"\nimport EarthGlobe from \"../Globes/EarthGlobe\";\nimport MoonGlobe from \"../Globes/MoonGlobe\";\nimport MarsGlobe from \"../Globes/MarsGlobe\";\nimport earthImage from '../resources/earth_blue_planet_globe.jpg';\nimport moonImage from '../resources/moon-test.png';\nimport sunImage from '../resources/sun_immage.jpeg';\nimport marsImage from '../resources/mars_red_planet_planet.jpg'\n\nimport './LandingPage.css'\n\nexport default function LandingPage() {\n  const [activeCard, setActiveCard] = useState(-1);\n  function openCard(cardChoice) {\n    if (cardChoice === activeCard) {\n      setActiveCard(-1);\n      return;\n    }\n    setActiveCard(cardChoice);\n  }\n  function gridNumber(planetCardNumber) {\n    if (activeCard === -1)\n      return 3;\n    if (activeCard === planetCardNumber)\n      return 9;\n    return 1;\n  }\n  return (\n    <div className=\"App\">\n      <TopNavBar />\n      <Grid className=\"CardStack\" container spacing={0}>\n        <Grid item xs={6} md={gridNumber(0)} style={{display:'flex'}}>\n          <PlanetCard planetName=\"Sun\" image={sunImage} openCard={()=>openCard(0)} active={activeCard===0}/>\n          <Collapse in={activeCard===0} orientation='horizontal' timeout=\"auto\" unmountOnExit>\n            <SunGlobe />\n          </Collapse>\n        </Grid>\n        <Grid item xs={6} md={gridNumber(1)} style={{display:'flex'}}>\n          <PlanetCard planetName=\"Earth\" image={earthImage} openCard={()=>openCard(1)} active={activeCard===1}/>\n          <Collapse in={activeCard===1} orientation='horizontal' timeout=\"auto\" unmountOnExit>\n            <EarthGlobe />\n          </Collapse>\n        </Grid>\n        <Grid item xs={6} md={gridNumber(2)} style={{display:'flex'}}>\n          <PlanetCard planetName=\"Moon\" image={moonImage} openCard={()=>openCard(2)} active={activeCard===2}/>\n          <Collapse in={activeCard===2} orientation='horizontal' timeout=\"auto\" unmountOnExit>\n            <MoonGlobe />\n          </Collapse>\n        </Grid>\n        <Grid item xs={6} md={gridNumber(3)} style={{display:'flex'}}>\n          <PlanetCard planetName=\"Mars\" image={marsImage} openCard={()=>openCard(3)} active={activeCard===3}/>\n          <Collapse in={activeCard===3} orientation='horizontal' timeout=\"auto\" unmountOnExit>\n            <MarsGlobe />\n          </Collapse>\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n\nfunction PlanetCard(props) {\n  const { height } = useWindowDimensions();\n  return (\n    <>\n    <Paper elevation={6}>\n      <Card sx={{ maxWidth: props.active ? 90 : 440 }} className=\"PlanetCard\">\n        <CardActionArea onClick={props.openCard}>\n          <CardMedia\n            component=\"img\"\n            height={height-155}\n            image={props.image}\n            alt={`${props.planetName} Image Failed to Load`}\n          />\n          <CardContent className=\"PlanetCard-card-content\">\n            <Typography gutterBottom variant=\"h5\" component=\"div\" className=\"PlanetCard-card-content\">\n              {props.planetName}\n            </Typography>\n          </CardContent>\n        </CardActionArea>\n        \n      </Card>\n    </Paper>\n    </>\n  );\n};\n\n\nfunction getWindowDimensions() {\n  const { innerWidth: width, innerHeight: height } = window;\n  return {\n    width,\n    height\n  };\n}\n\nfunction useWindowDimensions() {\n  const [windowDimensions, setWindowDimensions] = useState(getWindowDimensions());\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowDimensions(getWindowDimensions());\n    }\n\n    window.addEventListener('resize', handleResize);\n    return () => window.removeEventListener('resize', handleResize);\n  }, []);\n\n  return windowDimensions;\n}","import './App.css';\nimport LandingPage from './LandingPage/LandingPage';\nimport { createTheme, ThemeProvider } from '@mui/material/styles';\n\nconst theme = createTheme({\n  palette: {\n    primary: {\n      light: '#4D4D4D',\n      main: '#4D4D4D',\n      dark: '#4D4D4D'\n    },\n    secondary: {\n      light: '#4D4D4D',\n      main: '#4D4D4D',\n      dark: '#4D4D4D'\n    },\n    \n  },\n});\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <LandingPage />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}